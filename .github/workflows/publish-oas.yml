name: CI Workflow


on:
  push:
    branches: [ main ]
    paths:
      - '**/*'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: 12345678
          MYSQL_DATABASE: barber-shop
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:latest
        ports:
          - "6379:6379"
        volumes:
          - redis-data:/data
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    permissions: write-all
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Copy envs
        run: cp .env.ci .env

      - name: Start application
        run: |
          npm run start:dev &
          while ! nc -z localhost 3000; do sleep 1; done

      - name: Download OpenAPI YAML
        run: curl -o openapi.yaml http://localhost:3000/OAS/yaml

      - name: Commit OpenAPI YAML
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          
          git config --global user.name 'JoaoFerrazfs'
          git config --global user.email 'joaoferrazp@gmail.com'
          
          # Delete old branch
          git push origin --delete swagguer-docs || true
          git branch -D swagguer-docs || true
          
          # Create a new branch and send to remote repository
          git checkout -b swagguer-docs
          git push --set-upstream origin swagguer-docs --force
          
          # Add changes and update remote repository
          git add .
          git commit --amend --no-edit
          git push --force
